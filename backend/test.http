### Get all servers
GET http://localhost:3001/api/servers

###

### Create a new server
POST http://localhost:3001/api/servers
Content-Type: application/json

{
  "server_name": "DigitalOcean Droplet 2",
  "owner": "Yan Myo Naing",
  "service_type": "X-Ray",
  "ip_address": "192.168.1.12",
  "domain_name": "server2.example.com"
}

###

### Get a single server by ID
# Change the '1' to a valid server ID from your database
GET http://localhost:3001/api/servers/1

###

### Update a server by ID
# Change the '1' to a valid server ID
PUT http://localhost:3001/api/servers/1
Content-Type: application/json

{
  "server_name": "DigitalOcean Droplet 1 (Updated)",
  "owner": "Yan Myo Naing",
  "service_type": "Outline-VPN",
  "ip_address": "192.168.1.10",
  "domain_name": "updated.example.com"
}

###

### Delete a server by ID
# Change the '1' to a valid server ID
DELETE http://localhost:3001/api/servers/1

### --------------------------------- ###
###           USER ROUTES             ###
### --------------------------------- ###

### Create a new user for a specific server
# Make sure the server_id (e.g., 1) exists
POST http://localhost:3001/api/users
Content-Type: application/json

{
  "account_name": "customer_jane_doe",
  "service_type": "Outline",
  "account_type": "Unlimited",
  "expire_date": "2026-10-09",
  "total_devices": 10,
  "data_limit_gb": null,
  "server_id": 1
}

###

### Get all users for a specific server
# Change the '1' to a valid server ID
GET http://localhost:3001/api/users/server/1



---
### Step 4: Test Your New Endpoints

Finally, let's test the new API routes to make sure they work. Add the following to your **`backend/test.http`** file.

```http
### --------------------------------- ###
###           AUTH ROUTES             ###
### --------------------------------- ###

### Register your FIRST admin account
# NOTE: This will only work once per username.
POST http://localhost:3001/api/auth/register
Content-Type: application/json

{
  "display_name": "Ko Yan",
  "username": "admin",
  "password": "â€Œadmin",
  "role": "ADMIN"
}

###

### Login as an admin
POST http://localhost:3001/api/auth/login
Content-Type: application/json

{
  "username": "admin",
  "password": "your_strong_password"
}
